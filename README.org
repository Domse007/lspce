#+TITLE: LSPCE
#+AUTHOR: zbelial
#+EMAIL: zjyzhaojiyang1@gmail.com
#+DATE: 2022
#+LANGUAGE: en

* Introduction
  LSPCE - LSP Client for Emacs, is a simple lsp client that is implemented as an Emacs module.

  CAUTION: This package is still in *pre-alpha* stage.

  It does not want to be a full-featured lsp client. The features it supports are:
  - find definitions/references/implementatoins (as a xref backend)
  - completion (as a capf function)
    support snippet and auto import.
  - diagnostics (as a flymake backend)
    process diagnostics when idle.
  - hover (triggered by ~lspce-help-at-point~)
  - signature help (as an ~eldoc-documentation-functions~ function)
  - code action (triggered by ~lspce-code-actions~)
  - rename (triggered by ~lspce-rename~ )
    

  All features I need have been implemented now, and my next step is to make it more robust and more performant.
  

  I have tested LSPCE with `pyright` and `rust-analyzer`, and I'm using it to develop itself :).

* Installation
  At the moment, you can only install LSPCE by cloning this repo and compile rust code manually.
** Installing from the Git Repository
   Before installing LSPCE, you should install rust and cargo.
   #+BEGIN_SRC bash
     $ git clone https://github.com/zbelial/lspce.git ~/.emacs.d/site-lisp/lspce
     $ cd ~/.emacs.d/site-lisp/lspce
     $ cargo build
     # or, to build a release version
     $ cargo build --release
     # then you can rename the .so file (and copy it to another directory )
     $ mv target/debug/liblspce_module.so lspce-module.so 
   #+END_SRC

   Or (if you use Linux) you can download a .so file I compiled on a Manjaro with rust 1.61.0.
* Get started
  You need to install [[https://github.com/rejeep/f.el][f.el]] and [[https://github.com/joaotavora/yasnippet][yasnippet]] .
  #+BEGIN_SRC elisp
    (use-package lspce
      :load-path "/path/to/lspce/lisp"
      :config (progn
                (setq lspce-send-changes-idle-time 1)

                ;; log file
                (lspce-set-log-file "/tmp/lspce.log")

                ;; By default, lspce will write log to what `lspce-set-log-file' sets.
                ;; To disable logging, use 
                ;; (lspce-disable-logging)
                ;; You can enable logging on the fly by calling `lspce-enable-logging'

                ;; enable lspce in particular buffers
                ;; (add-hook 'rust-mode-hook 'lspce-mode)

                ;; modify `lspce-server-programs' to add or change a lsp server, see document
                ;; of `lspce-lsp-type-function' to understand how to get buffer's lsp type.
                )
      )
  #+END_SRC

* TODOs
  There are some bugs/issues that should be fixed. Here is the list:
  - diagnostics does not work well, sometimes they won't disappear.
  - renaming class name in Java won't rename the file name (LSPCE does not support file rename/create/delete now)
  - completion has a little bug, where it may complete foo.bar to foo.barb when current text is foo.b
  - ...

* Acknowledgements
  Thanks to [[https://github.com/ubolonton/emacs-module-rs][emacs-module-rs]], which makes implementing LSPCE possible.

  Thanks to [[https://github.com/joaotavora/eglot][eglot]] and [[https://github.com/emacs-lsp/lsp-mode][lsp-mode]], I learned a lot about LSP from both of them while developing this package.
